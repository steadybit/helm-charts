apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "steadybit-outpost.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "steadybit-outpost.commonLabels" . | nindent 4 }}
    {{- range $key, $value := .Values.outpost.extraLabels }}
    {{ $key }}: {{ $value }}
  {{- end }}
spec:
  serviceName: steadybit-outpost
  replicas: 1
  selector:
    matchLabels:
  {{- include "steadybit-outpost.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "steadybit-outpost.commonLabels" . | nindent 8 }}
        {{- range $key, $value := .Values.outpost.extraLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        prometheus.io/scrape: "{{ .Values.outpost.prometheus.scrape }}"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "{{ .Values.outpost.port }}"
        oneagent.dynatrace.com/injection: "false"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "steadybit-outpost.serviceAccountName" . }}
      automountServiceAccountToken: true
      {{- if .Values.priorityClassName.use }}
      priorityClassName: {{ .Values.priorityClassName.name }}
      {{- end }}
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
        - name: steadybit-outpost
          image: "{{ .Values.image.name }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          {{- if .Values.outpost.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.outpost.port }}
              path: /health
            initialDelaySeconds: {{ .Values.outpost.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.outpost.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.outpost.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.outpost.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.outpost.livenessProbe.failureThreshold }}
          {{- end }}
          env:
            - name: STEADYBIT_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: STEADYBIT_LOG_FORMAT
              value: {{ .Values.logging.format | quote }}
            - name: STEADYBIT_AGENT_REGISTER_URL
              value: {{ .Values.outpost.registerUrl | quote }}
            {{ if .Values.outpost.key -}}
            - name: STEADYBIT_AGENT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "steadybit-outpost.fullname" . }}
                  key: key
            {{ end -}}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: STEADYBIT_KUBERNETES_CLUSTER_NAME
              value: {{ .Values.global.clusterName | quote }}
            - name: STEADYBIT_AGENT_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STEADYBIT_AGENT_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STEADYBIT_AGENT_IDENTIFIER
              value: "{{.Values.global.clusterName}}/{{.Release.Namespace}}/%HOSTNAME%"
            - name: STEADYBIT_HTTP_ENDPOINT_PORT
              value: {{ .Values.outpost.port | quote }}
            - name: STEADYBIT_AGENT_WORKING_DIR
              value: /tmp/steadybit-outpost
            {{ if .Values.outpost.aws.accountId -}}
            - name: STEADYBIT_AGENT_AWS_ACCOUNT_ID
              value: "{{.Values.outpost.aws.accountId}}"
            {{ end -}}
            {{- include "oauth2Env" . | nindent 12 }}
            {{- include "extensionEnv" . | nindent 12 }}
            {{- include "extraCertificatesEnv" . | nindent 12 }}
            {{ $matchLabelCounter := 0 | int }}
            {{- range $key, $value := .Values.outpost.extensions.autodiscovery.matchLabels }}
            - name: STEADYBIT_AGENT_EXTENSIONS_AUTODISCOVERY_MATCHLABELS_{{$matchLabelCounter}}_KEY
              value: {{ $key }}
            - name: STEADYBIT_AGENT_EXTENSIONS_AUTODISCOVERY_MATCHLABELS_{{$matchLabelCounter}}_VALUE
              value: {{ $value }}
            {{ $matchLabelCounter = add1 $matchLabelCounter }}
            {{- end }}
            {{ $matchLabelExcludeCounter := 0 | int }}
            {{- range $key, $value := .Values.outpost.extensions.autodiscovery.matchLabelsExclude }}
            - name: STEADYBIT_AGENT_EXTENSIONS_AUTODISCOVERY_MATCHLABELSEXCLUDE_{{$matchLabelExcludeCounter}}_KEY
              value: {{ $key }}
            - name: STEADYBIT_AGENT_EXTENSIONS_AUTODISCOVERY_MATCHLABELSEXCLUDE_{{$matchLabelExcludeCounter}}_VALUE
              value: {{ $value }}
            {{ $matchLabelExcludeCounter = add1 $matchLabelExcludeCounter }}
            {{- end }}
            {{- with .Values.outpost.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: steadybit-outpost-state
              mountPath: /var/lib/steadybit-outpost
            - name: tmp-dir
              mountPath: /tmp
            {{- include "oauth2VolumeMounts" . | nindent 12 }}
            {{- include "extensionVolumeMounts" . | nindent 12 }}
            {{- include "extraCertificatesVolumeMounts" . | nindent 12 }}
{{- with .Values.outpost.extraVolumeMounts  }}
{{ toYaml . | indent 12 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      volumes:
        - name: tmp-dir
          emptyDir:
            medium: Memory
        {{-  include "oauth2Volumes" . | nindent 8 }}
        {{-  include "extensionVolumes" . | nindent 8 }}
{{- with .Values.outpost.extraVolumes  }}
{{ toYaml . | indent 8 }}
{{- end }}
  volumeClaimTemplates:
    - metadata:
        name: steadybit-outpost-state
      spec:
        {{- if .Values.outpost.persistence.storageClass }}
        storageClassName: {{ .Values.outpost.persistence.storageClass }}
        {{- end }}
        accessModes:
          - {{ .Values.outpost.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.outpost.persistence.size }}