using oauth2 with mtls from containerPath and token uri:
  1: |
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: steadybit-agent
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: steadybit-agent-0.0.0
        steadybit.com/agent: "true"
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-agent
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-agent
      serviceName: steadybit-agent
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
            prometheus.io/path: /prometheus
            prometheus.io/port: "42899"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: steadybit-agent
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: steadybit-agent-0.0.0
            steadybit.com/agent: "true"
            steadybit.com/discovery-disabled: "true"
        spec:
          automountServiceAccountToken: true
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_AGENT_REGISTER_URL
                  value: https://platform.steadybit.io
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: STEADYBIT_KUBERNETES_CLUSTER_NAME
                  value: test
                - name: STEADYBIT_AGENT_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: STEADYBIT_AGENT_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: STEADYBIT_AGENT_IDENTIFIER
                  value: test/NAMESPACE/%HOSTNAME%
                - name: STEADYBIT_AGENT_WORKING_DIR
                  value: /tmp/steadybit-agent
                - name: STEADYBIT_AGENT_AUTH_PROVIDER
                  value: OAUTH2
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_ID
                  value: some-client-id
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_TOKEN_URI
                  value: https://some-token-uri
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_CERT_CHAIN_FILE
                  value: /etc/ssl/certs/client.crt
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_CERT_KEY_FILE
                  value: /etc/ssl/certs/client.key
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_CERT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: oauth2ClientKeyPassword
                      name: RELEASE-NAME-steadybit-agent
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_SERVER_CERT
                  value: /etc/ssl/certs/server.crt
              image: steadybit/agent:0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health
                  port: 42899
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: steadybit-agent
              resources:
                limits:
                  cpu: 1500m
                  memory: 1500Mi
                requests:
                  cpu: 500m
                  memory: 250Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 10000
              volumeMounts:
                - mountPath: /var/lib/steadybit-agent
                  name: steadybit-agent-state
                - mountPath: /tmp
                  name: tmp-dir
          securityContext:
            fsGroup: 1000
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-agent
          volumes:
            - emptyDir:
                medium: Memory
              name: tmp-dir
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
        - metadata:
            name: steadybit-agent-state
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 200Mi
using oauth2 with mtls from secrets:
  1: |
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: steadybit-agent
        app.kubernetes.io/version: 0.0.0
        helm.sh/chart: steadybit-agent-0.0.0
        steadybit.com/agent: "true"
        steadybit.com/discovery-disabled: "true"
      name: RELEASE-NAME-steadybit-agent
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: steadybit-agent
      serviceName: steadybit-agent
      template:
        metadata:
          annotations:
            oneagent.dynatrace.com/injection: "false"
            prometheus.io/path: /prometheus
            prometheus.io/port: "42899"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: steadybit-agent
            app.kubernetes.io/version: 0.0.0
            helm.sh/chart: steadybit-agent-0.0.0
            steadybit.com/agent: "true"
            steadybit.com/discovery-disabled: "true"
        spec:
          automountServiceAccountToken: true
          containers:
            - env:
                - name: STEADYBIT_LOG_LEVEL
                  value: INFO
                - name: STEADYBIT_LOG_FORMAT
                  value: text
                - name: STEADYBIT_AGENT_REGISTER_URL
                  value: https://platform.steadybit.io
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: STEADYBIT_KUBERNETES_CLUSTER_NAME
                  value: test
                - name: STEADYBIT_AGENT_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: STEADYBIT_AGENT_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: STEADYBIT_AGENT_IDENTIFIER
                  value: test/NAMESPACE/%HOSTNAME%
                - name: STEADYBIT_AGENT_WORKING_DIR
                  value: /tmp/steadybit-agent
                - name: STEADYBIT_AGENT_AUTH_PROVIDER
                  value: OAUTH2
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_ID
                  value: some-client-id
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: some-secret-key
                      name: some-secret
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_ISSUER_URI
                  value: https://some-issuer-uri
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_AUDIENCE
                  value: some-audience
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_CERT_CHAIN_FILE
                  value: /opt/steadybit/agent/etc/oauth2/client/tls.crt
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_CERT_KEY_FILE
                  value: /opt/steadybit/agent/etc/oauth2/client/tls.key
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_CLIENT_CERT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: some-other-secret-key
                      name: some-secret
                - name: STEADYBIT_AGENT_AUTH_OAUTH2_SERVER_CERT
                  value: /opt/steadybit/agent/etc/oauth2/server/tls.crt
              image: steadybit/agent:0.0.0
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /health
                  port: 42899
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: steadybit-agent
              resources:
                limits:
                  cpu: 1500m
                  memory: 1500Mi
                requests:
                  cpu: 500m
                  memory: 250Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 10000
              volumeMounts:
                - mountPath: /var/lib/steadybit-agent
                  name: steadybit-agent-state
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /opt/steadybit/agent/etc/oauth2/client
                  name: oauth2-tls-client
                  readOnly: true
                - mountPath: /opt/steadybit/agent/etc/oauth2/server
                  name: oauth2-tls-server
                  readOnly: true
          securityContext:
            fsGroup: 1000
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: steadybit-agent
          volumes:
            - emptyDir:
                medium: Memory
              name: tmp-dir
            - name: extensions-tls-client
              secret:
                secretName: some-client-secret
            - name: extensions-tls-server
              secret:
                secretName: server.crt
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
        - metadata:
            name: steadybit-agent-state
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 200Mi
