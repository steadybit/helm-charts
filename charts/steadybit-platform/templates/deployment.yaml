{{- include "validIngressOriginWhenPortSplitting" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "steadybit-platform.fullname" . }}
  labels:
    {{- include "steadybit-platform.commonLabels" . | nindent 4 }}
  {{- range $key, $value := .Values.platform.extraLabels }}
    {{ $key }}: {{ $value }}
  {{- end }}
spec:
  replicas: {{ .Values.platform.replicas }}
  minReadySeconds: {{ .Values.platform.minReadySeconds }}
  strategy:
    {{- if eq .Values.platform.rolloutStrategy "RollingUpdate" }}
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.platform.maxSurge }}
      maxUnavailable: {{ .Values.platform.maxUnavailable }}
    {{- else }}
    type: Recreate
    {{- end }}
  selector:
    matchLabels:
      {{- include "steadybit-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "{{ .Values.platform.prometheus.scrape }}"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "9090"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "steadybit-platform.commonLabels" . | nindent 8 }}
        {{- range $key, $value := .Values.platform.extraLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      imagePullSecrets:
        - name: {{ template "steadybit-platform.fullname" . }}-pull-secrets
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      serviceAccountName: {{ include "steadybit-platform.serviceAccountName" . }}
      {{- if .Values.platform.database.migration.useInitContainer }}
      initContainers:
        - name: {{ include "steadybit-platform.name" . }}-db-migration
          image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          envFrom:
{{ toYaml .Values.platform.envFrom | indent 12 }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+DisableAttachMechanism"
            - name: SPRING_PROFILES_ACTIVE
              value: "db-migration"
            - name: LOGGING_FORMAT
              value: {{ .Values.platform.logging.format | quote }}
            - name: STEADYBIT_TENANT_MODE
              value: {{ .Values.platform.tenant.mode | quote }}
            {{- if eq "ONPREM" (include "validTenantMode" .) }}
            - name: STEADYBIT_TENANT_AGENTKEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "steadybit-platform.fullname" . }}
                  key: key
            - name: STEADYBIT_TENANT_KEY
              value: {{ .Values.platform.tenant.key | quote }}
            - name: STEADYBIT_TENANT_NAME
              value: {{ .Values.platform.tenant.name | quote }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgresql.auth.username }}
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ include "steadybit-platform.postgresql.fullname" . }}:{{  .Values.postgresql.service.ports.postgresql }}/{{ .Values.postgresql.auth.database }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steadybit-platform.postgresql.fullname" . }}
                  key: "password"
            {{- end }}
{{- with .Values.platform.env }}
{{ toYaml . | indent 12 }}
{{- end }}
      {{- end }}
      {{- if and (.Values.platform.terminationGracePeriodSeconds) (ne (int .Values.platform.terminationGracePeriodSeconds) 0) }}
      terminationGracePeriodSeconds: {{ .Values.platform.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
        - name: {{ include "steadybit-platform.name" . }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          ports:
            - name: ui-port
              containerPort: 8080
              protocol: TCP
            - name: websocket-port
              containerPort: 7878
              protocol: TCP
          volumeMounts:
          {{- if eq (include "steadybit-platform.hasVolumeExtraCerts" . ) "true" }}
            - name: extra-certs
              mountPath: /opt/steadybit/platform/etc/extra-certs
          {{- end }}
{{- with .Values.platform.extraVolumeMounts  }}
{{ toYaml . | indent 12 }}
{{- end }}
          {{- if .Values.platform.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: ui-port
              path: /api/health/readiness
            initialDelaySeconds: {{ .Values.platform.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.platform.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.platform.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.platform.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.platform.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.platform.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: ui-port
              path: /api/health/liveness
            initialDelaySeconds: {{ .Values.platform.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.platform.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.platform.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.platform.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.platform.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.platform.startupProbe.enabled }}
          startupProbe:
            httpGet:
              port: ui-port
              path: /api/health/liveness
            initialDelaySeconds: {{ .Values.platform.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.platform.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.platform.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.platform.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.platform.startupProbe.failureThreshold }}
          {{- end }}
          envFrom:
{{ toYaml .Values.platform.envFrom | indent 12 }}
          env:
            {{- if and (.Values.platform.terminationGracePeriodSeconds) (ne (int .Values.platform.terminationGracePeriodSeconds) 0) }}
            - name: STEADYBIT_EXPERIMENT_EXECUTION_SHUTDOWN_MAX_WAIT_TIME
              value: {{ .Values.platform.terminationGracePeriodSeconds }}s
            {{- end }}
            {{- if and (.Values.platform.experimentExecutionShutdownCheckInterval) (ne (int .Values.platform.experimentExecutionShutdownCheckInterval) 0) }}
            - name: STEADYBIT_EXPERIMENT_EXECUTION_SHUTDOWN_CHECK_INTERVAL
              value: {{ .Values.platform.experimentExecutionShutdownCheckInterval }}s
            {{- end }}
            - name: LOGGING_FORMAT
              value: {{ .Values.platform.logging.format | quote }}
            - name: INSTANCE_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['pod-template-hash']
            - name: STEADYBIT_TENANT_MODE
              value: {{ .Values.platform.tenant.mode | quote }}
            {{- if eq "ONPREM" (include "validTenantMode" .) }}
            - name: STEADYBIT_TENANT_AGENTKEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "steadybit-platform.fullname" . }}
                  key: key
            - name: STEADYBIT_TENANT_KEY
              value: {{ .Values.platform.tenant.key | quote }}
            - name: STEADYBIT_TENANT_NAME
              value: {{ .Values.platform.tenant.name | quote }}
            {{- end }}
            {{- if .Values.platform.publicWebUrl }}
            - name: STEADYBIT_WEB_PUBLIC_URL
              value: {{ .Values.platform.publicWebUrl }}
            {{- end }}
            - name: STEADYBIT_WEB_PUBLIC_EXPERIMENT_PORT
              value: {{ .Values.platform.publicWebsocketPort | quote }}
            {{- if .Values.platform.ingressOrigin }}
            - name: STEADYBIT_WEB_PUBLIC_EXPERIMENT_URL
              value: {{ .Values.platform.ingressOrigin | quote }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgresql.auth.username }}
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ include "steadybit-platform.postgresql.fullname" . }}:{{  .Values.postgresql.service.ports.postgresql }}/{{ .Values.postgresql.auth.database }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "steadybit-platform.postgresql.fullname" . }}
                  key: "password"
            {{- end }}
            {{- if .Values.platform.database.migration.useInitContainer }}
            - name: STEADYBIT_TENANT_DDL_MODE_STARTUP
              value: "none"
            {{- end }}
            {{- if eq .Values.platform.tenant.agent.auth.provider "oauth2" }}
            - name: STEADYBIT_AUTH_AGENT_PROVIDER
              value: OAUTH2
            - name: STEADYBIT_AUTH_AGENT_OAUTH2_ISSUER_URI
              value: {{ .Values.platform.tenant.agent.auth.oauth2.issuerUri | quote }}
            {{- end }}
            {{- if .Values.platform.proxy.host }}
            - name: STEADYBIT_PROXY_HOST
              value: {{ .Values.platform.proxy.host | quote }}
            - name: STEADYBIT_PROXY_PORT
              value: {{ .Values.platform.proxy.port | quote }}
            - name: STEADYBIT_PROXY_PROTOCOL
              value: {{ .Values.platform.proxy.protocol | quote }}
            {{- end }}
            {{- if .Values.platform.proxy.user }}
            - name: STEADYBIT_PROXY_USER
              value: {{ .Values.platform.proxy.user | quote }}
            - name: STEADYBIT_PROXY_PASSWORD
              value: {{ .Values.platform.proxy.password | quote }}
            {{- end }}
            {{- if .Values.platform.name }}
            - name: STEADYBIT_PLATFORM_NAME
              value: {{ .Values.platform.name | quote }}
            {{- end }}
{{- with .Values.platform.env }}
{{ toYaml . | indent 12 }}
{{- end }}
        {{- if .Values.platform.portSplit.enabled }}
        - name: {{ include "steadybit-platform.name" . }}-port-splitter
          image: "{{ .Values.image.name }}-port-splitter:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: egress-port
              containerPort: 8081
              protocol: TCP
            - name: ingress-port
              containerPort: 8082
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 128Mi
          env:
            - name: PLATFORM_HTTP_ORIGIN
              value: "http://127.0.0.1:8080"
            - name: PLATFORM_WS_ORIGIN
              value: "http://127.0.0.1:7878"
        {{- end }}
      {{- with .Values.platform.extraVolumes }}
      volumes:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- toYaml . | nindent 8 }}
      {{- end }}